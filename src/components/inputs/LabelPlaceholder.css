.nti-label-placeholder {
	--text-smaller: 0.875rem;
	--padding-horizontal: 0;
	--border: 1px solid;
	--transition-time: 0.2s;

	display: block;
	font-family: var(--body-font-family);
	line-height: 1.375;
}

.input-wrapper {
	position: relative;
}

/* Clear the base input styles, since we need to define them on the container */
.nti-label-placeholder :global(input:not([type="checkbox"])) {
	border-radius: 0;
	background: none;

	/* Boo !important but we need to override some mobile styles */
	border: var(--border, 1px solid) transparent !important;

	/* again overriding mobile styles */
	box-shadow: none;
	color: inherit;
	font: inherit;
	padding: 0;
	height: auto;
}

.nti-label-placeholder.center :global(input:not([type="checkbox"])) {
	text-align: center;
}

.nti-label-placeholder .error-message {
	display: block;
	margin: 0.125rem 0 var(--padding-horizontal, 0.625rem);
	padding: 0 var(--padding-horizontal, 0.625rem);
	font-size: 0.75rem;
}

.nti-label-placeholder.box {
	margin-top: calc(var(--text-smaller, 0.875rem) / 2);

	--padding-horizontal: 0.625rem;

	& :global(input:not([type="checkbox"])) {
		width: 100%;
		border-radius: 2px;
		padding: var(--padding-horizontal, 0.625rem);

		& ~ .fieldset {
			position: absolute;
			top: calc(var(--padding-horizontal, 0.625rem) * -1);
			bottom: 0;
			left: 0;
			right: 0;
			padding: 0;
			border: var(--border, 1px solid) transparent;
			margin: 0;
			border-radius: 2px;
			pointer-events: none;

			& .legend {
				/* Using margin prevents the fieldset top-left corner being cut off */
				padding: 0 calc(var(--padding-horizontal, 0.625rem) - 0.375rem);
				margin-left: 0.375rem;
				font-size: 1em;
				color: var(--tertiary-grey);
				transition:
					font-size var(--transition-time, 0.2s),
					transform var(--transition-time, 0.2s);
				pointer-events: none;
			}
		}
	}

	&.fill {
		& :global(input:not([type="checkbox"])) {
			background: var(--panel-background);
		}
	}

	&.no-label {
		& :global(input:not([type="checkbox"])) {
			& ~ .fieldset {
				top: 0;
			}
		}
	}

	&:not(.locked).empty {
		& :global(input:not([type="checkbox"])):not(:focus) {
			/* Boo !important but we need to override some mobile styles */
			border-color: var(--border-grey-light) !important;

			& ~ fieldset .legend {
				transform: translateY(calc(50% + var(--padding-horizontal, 0.625rem)));
			}
		}
	}

	/* TODO: cleanup */
	&.locked :global(input:not([type="checkbox"])),
	&:not(.empty) :global(input:not([type="checkbox"])),
	& :global(input:not([type="checkbox"])):focus {
		& ~ .fieldset {
			border-color: var(--border-grey-light);

			& .legend {
				top: -0.7rem;
				font-size: var(--text-smaller, 0.875rem);
				transform: none;
			}
		}

		&:focus {
			& ~ .fieldset {
				border-color: var(--secondary-green);

				& .legend {
					color: var(--secondary-green);
				}
			}
		}
	}

	& :global(input:not([type="checkbox"])):-webkit-autofill {
		& ~ .fieldset {
			border-color: var(--border-grey-light);

			& .legend {
				top: -0.7rem;
				font-size: var(--text-smaller, 0.875rem);
				transform: none;
			}
		}
	}

	&.center :global(input:not([type="checkbox"])) ~ .fieldset .legend {
		margin-left: auto;
		margin-right: auto;
	}

	&.error {
		&:not(.locked).empty {
			& :global(input:not([type="checkbox"])):not(:focus) {
				border-color: var(--primary-red);
			}
		}

		/* TODO: cleanup */
		&.locked :global(input:not([type="checkbox"])),
		&:not(.empty) :global(input:not([type="checkbox"])),
		& :global(input:not([type="checkbox"])):focus {
			& ~ fieldset {
				border-color: var(--primary-red);

				& .legend {
					color: var(--primary-red);
				}
			}
		}

		& :global(input:not([type="checkbox"])):-webkit-autofill {
			& ~ fieldset {
				border-color: var(--primary-red);

				& .legend {
					color: var(--primary-red);
				}
			}
		}
	}

	& .label-placeholder {
		display: none;
	}
}

.nti-label-placeholder.underlined {
	& :global(input:not([type="checkbox"])) {
		-webkit-appearance: none;
		width: 100%;
		box-shadow: inset 0 -1px 0 0 rgba(0, 0, 0, 0.4);
		padding: 1.5625em var(--padding-horizontal, 0.625rem) 0.625rem;
		background: none;

		& + .label-placeholder {
			position: absolute;
			left: var(--padding-horizontal, 0.625rem);
			font-size: 1em;
			color: var(--tertiary-grey);
			transition:
				top var(--transition-time, 0.2s),
				font-size var(--transition-time, 0.2s),
				transform var(--transition-time, 0.2s);
			pointer-events: none;
		}
	}

	&:not(.locked).empty {
		& :global(input:not([type="checkbox"])):not(:focus) {
			& + .label-placeholder {
				top: 50%;
				transform: translateY(-50%);
			}
		}
	}

	/* TODO: cleanup */
	&.locked :global(input:not([type="checkbox"])),
	&:not(.empty) :global(input:not([type="checkbox"])),
	& :global(input:not([type="checkbox"])):focus {
		& + .label-placeholder {
			top: 0.25rem;
			font-size: var(--text-smaller, 0.875rem);
			transform: none;
		}

		&:focus {
			box-shadow: inset 0 -1px 0 0 var(--secondary-green);

			& + .label-placeholder {
				color: var(--secondary-green);
			}
		}
	}

	& :global(input:not([type="checkbox"])):-webkit-autofill + .label-placeholder {
		top: 0.25rem;
		font-size: var(--text-smaller, 0.875rem);
		transform: none;
	}

	&.center {
		& .label-placeholder {
			left: 0;
			right: 0;
			text-align: center;
		}
	}

	&.fill {
		--padding-horizontal: 0.625rem;

		& :global(input:not([type="checkbox"])) {
			background: #f7f7f7;
			border-radius: 5px 5px 0 0;
		}
	}

	&.error {
		&:not(.locked).empty {
			& :global(input:not([type="checkbox"])):not(:focus) {
				box-shadow: inset 0 -1px 0 0 var(--primary-red);
			}
		}

		/* TODO: cleanup */
		&.locked :global(input:not([type="checkbox"])),
		&:not(.empty) :global(input:not([type="checkbox"])),
		& :global(input:not([type="checkbox"])):focus {
			& + .label-placeholder {
				color: var(--primary-red);
			}
		}

		& :global(input:not([type="checkbox"])):-webkit-autofill + .label-placeholder {
			color: var(--primary-red);
		}
	}
}
